<?xml version="1.0" encoding="utf-8" ?>
<!--
///<summary>
///页面中控件校验信息配置文件
///作者：Anders
///编写日期： 2007-03-30
///</summary>
使用说明：
=======================================================================
1、type类型必须从以下中选择
    enum ValidatorType{RequiredFieldValidator,RangeValidator,RegularExpressionValidator,CompareValidator}
    实际上在.NET中编辑本文件时会有提示，如果type选择不正确，将不会生成校验对象。

2、一个控件可以有多个validator, 但必须放在同一个Control节点内。

3、控件的信息中help属性指定控件的tooltip信息，length属性指定控件的MaxLength，validator提供校验功能。
  
4、<ValidateParamA><ValidateParamB>节点如何填写：

  4.1 对于RequiredFieldValidator  -如果要求控件不为空，<ValidateParamA><ValidateParamB>都为空；如果要求有初始值且必须修改，<ValidateParamA>填写初始值
		<Control name="UserName" length="20">
			<Help>用户明必须填写</Help>
			<Validator type="RequiredFieldValidator">
				<Error>用户明必须填写</Error>
				<ValidateParamA>请填写用户名</ValidateParamA>
				<ValidateParamB></ValidateParamB>
			</Validator>
		</Control>
        
  4.2 对于RangeValidator  -ValidateParamA为控件值的类型，Date,String,Currency,Double,Integer其中之一；
				    -ValidateParamB填写形如minimumValue,maximumValue的字符串
				    <ValidateParamA>Integer</ValidateParamA>
					<ValidateParamB>1,10</ValidateParamB>
					
  4.3 对于RegularExpressionValidator -ValidateParamA为ValidationExpersition
	只在<ValidateParamA>填写相应正则表达式
    常用表达式：
    数字：
    1. ^\d+$ 非负整数；
    2. ^[0-9]*[1-9][0-9]*$    正整数；
    3. ^-[0-9]*[1-9][0-9]*$   负整数；
    4. ^((-[0-9]*[1-9][0-9]*)|(0+))$ 非正整数；
    5. ^-?\d+$ 整数；
    6. ^(-?\d+)(\.\d+)?$      浮点数；
    7. ^\d+(\.\d+)?$          非负浮点数；
    8. ^(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*))$  正浮点数；
    
    字符串：
    9. ^[A-Za-z]+$            英文字母组成的字符串；
    10. ^[A-Z]+$              大写英文字母；
    11. ^[a-z]+$              小写英文字母；
    12. ^[A-Za-z0-9]+$        数字、英文字母；
    13. ^\w+$                 数字、英文字母、下划线；
    
    14. ^[\w-]+(\.[\w-]+)*@[\w-]+(\.[\w-]+)+$  Email；
    15. ^[a-zA-z]+://(\w+(-\w+)*)(\.(\w+(-\w+)*))*(\?\S*)?$   url；
    16. ^((\+?[0-9]{2,4}\-[0-9]{3,4}\-)|([0-9]{3,4}\-))?([0-9]{7,8})(\-[0-9]+)?$  电话号码；
    17. ^[1-9]{3}[0-9]{8}$: 手机号码；
    18. [\u4e00-\u9fa5]     中文字符范围；
    19. (.|\n){n,m}         字符串长度在n和m之间；
    20. ^\d{4}-((0([1-9]{1}))|(1[1|2]))-(([0-2]([1-9]{1}))|(3[0|1]))$       日期格式：YYYY-MM-DD
    

  4.4 对于CompareValidator，形式为：
	1、如果同固定值比较，则<ValidateParamA>填写形式为值类型,比较运算符   String,Equal，<ValidateParamB>填写形式为Value,固定值 Value,标题
	<Validator type="CompareValidator">
		<Error>标题-只能接受 标题</Error>
		<ValidateParamA>String,Equal</ValidateParamA>
		<ValidateParamB>Value,标题</ValidateParamB>
	</Validator>
	2、如果同第二个控件比较，则<ValidateParamA>填写形式为值类型,比较运算符   String,Equal，<ValidateParamB>填写形式为Control,controlName   Control,tbxOutTime
	<Validator type="CompareValidator">
		<Error>标题-只能接受 标题</Error>
		<ValidateParamA>String,Equal</ValidateParamA>
		<ValidateParamB>Value,标题</ValidateParamB>
	</Validator>
	3、如果仅检查控件值类型，只填写<ValidateParamA>填写形式为值类型   如：Date,DataTypeCheck
    
5、Error节点表示显示的该控件的校验错误信息

6、Form节点的name属性表示窗体的名称，注意子目录的情况。
   如页面路径为：~/EditPage.aspx，那么其name属性应为EditPage_aspx；
   如果是~/SubFolder/EditPage.aspx，那么其name属性应为SubFolder_EditPage_aspx。
   help属性暂时为空，留做它用。

========================================================================
-->
<root xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="PageValidator.xsd">
    <Form name="EditPage_aspx" help="">
        <Control name="txtName" length="2" help="在此处填写姓名">
            <Validator type="RequiredFieldValidator">
                <Error>姓名必需填写</Error>
                <ValidateParamA></ValidateParamA>
                <ValidateParamB></ValidateParamB>
            </Validator>
        </Control>
    </Form>
    <Form name="SubFolder_SubEditPage_aspx" help="">
        <Control name="txtName" length="2" help="在此处填写姓名">
            <Validator type="RequiredFieldValidator">
                <Error>姓名必须填写。</Error>
                <ValidateParamA></ValidateParamA>
                <ValidateParamB></ValidateParamB>
            </Validator>
        </Control>
        <Control name="txtAge" length="2" help="在此处填写年龄">
            <Validator type="RequiredFieldValidator">
                <Error>年龄必须填写。</Error>
                <ValidateParamA></ValidateParamA>
                <ValidateParamB></ValidateParamB>
            </Validator>
            <Validator type="RangeValidator">
                <Error>年龄的范围应在20至60之间。</Error>
                <ValidateParamA>Integer</ValidateParamA>
                <ValidateParamB>20,70</ValidateParamB>
            </Validator>
        </Control>
        <Control name="ddlParentId" help="Select a parent category(if have).">
        </Control>
        <!-- 对于按钮控件，可以仅仅提供帮助信息。 -->
        <Control name="btnSubmit" help="Submit data to database.">
        </Control>
    </Form>
</root>